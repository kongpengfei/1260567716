#include<stdio.h>
#include<string.h>
typedef struct S
{
   int a;
   char name[10];
}S;
//change function by byte
void temp(const void* s1,const void* s2,int width)
{
    char* p1=(char*)s1;
    char* p2=(char*)s2;
    char ch;
    while(width--)
    {
    ch=*p1;
    *p1=*p2;
    *p2=ch;
    p1++;
    p2++;
    }
}
//Buble sort
void bubble_shot(void* arr,int len,int width,int (*p)(const void* s1,const void* s2))
{
    int i=0,j=0;
    for(i=0;i<len-1;i++)
        for(j=0;j<len-i-1;j++)
        {
        if(p((char*)arr+j*width,(char*)arr+(j+1)*width)>0)
            {
            temp((char*)arr+j*width,(char*)arr+(j+1)*width,width);
            }
        }

}
//compare the type of int
int int_int(const void* s1,const void* s2)
{
    return *(int*)s1-*(int*)s2;
}
//compare the type of char
int char_char(const void* s1,const void* s2)
{
    return strcmp((char*)s1,(char*)s2);
}
//sort by name in the structure
int s_s_name(const void* s1,const void* s2)
{
    return  strcmp(((S*)s1)->name, ((S*)s2)->name) ;
}
//sort by int in the structure
int s_s_int(const void* s1,const void* s2)
{
    return (((S*)s1)->a,((S*)s2)->a);
}
//the main of test
int main(void)
{
    int arr[10]={4,8,5,7,2,1,9,3,1,5};
    int sz=sizeof(arr)/sizeof(arr[0]);
    S s[3]={{10,"zhangsan"},{4,"lisi"},{12,"wangwu"}};
    int i;
    int sz1=sizeof(s)/sizeof(s[0]);

    //define function pointer
    int (*p_int)(const void* s1,const void* s2)=&int_int;
    int (*p_char)(const void* s1,const void* s2)=&char_char;
    int (*p_s_s_name)(const void* s1,const void* s2)=&s_s_name;
    int (*p_s_s_int)(const void* s1,const void* s2)=&s_s_int;
    //compare call fenction
    bubble_shot(arr,sz,sizeof(arr[0]),p_int);
    printf("sort by int\n");
    for(i=0;i<sz;i++)
        printf("%d\t",arr[i]) ;
    printf("\n");
    bubble_shot(s,sz1,sizeof(s[0]),p_s_s_name);
    printf("sort by name in the structure\n");
    for(i=0;i<sz1;i++)
        printf("%s\t",s[i].name) ;
    printf("\n");
    bubble_shot(s,sz1,sizeof(s[0]),p_s_s_int);
    printf("sort by int in the structure\n");
    for(i=0;i<sz1;i++)
        printf("%s\t",s[i].name) ;
        printf("\n");
    return 0;
}
